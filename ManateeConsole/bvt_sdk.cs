///
/// This file has been generated by bvtidl.pl. DO NOT MODIFY!
///

using System;
using System.Runtime.InteropServices;


namespace BVTSDK
{
/// <summary>
/// Global initialization and cleanup functions.
/// </summary>
    public class SDK
    {
        /// <summary>
        /// Perform initialization of the SDK.
        /// </summary>      
        public static void Init()
        {
            NativeMethods.BVTSDK_Init();
        }

        /// <summary>
        /// Cleans up various SDK structures.
        /// </summary>      
        public static void Shutdown()
        {
            NativeMethods.BVTSDK_Shutdown();
        }

        /// <summary>
        /// Return the major version number of the SDK.
        /// </summary>      
        public static int MajorVersion
        {
            get
            {
                return NativeMethods.BVTSDK_MajorVersion();
            }
        }

        /// <summary>
        /// Return the minor version of the SDK.
        /// </summary>      
        public static int MinorVersion
        {
            get
            {
                return NativeMethods.BVTSDK_MinorVersion();
            }
        }

        /// <summary>
        /// Return the build number of the SDK.
        /// </summary>      
        public static int BuildNumber
        {
            get
            {
                return NativeMethods.BVTSDK_BuildNumber();
            }
        }


        /// P/Invoke 'wrapper' class
        private static class NativeMethods
        {
            [DllImport("bvtsdk4", CallingConvention=CallingConvention.Cdecl)]
            public static extern void BVTSDK_Init();
            [DllImport("bvtsdk4", CallingConvention=CallingConvention.Cdecl)]
            public static extern void BVTSDK_Shutdown();
            [DllImport("bvtsdk4", CallingConvention=CallingConvention.Cdecl)]
            public static extern int BVTSDK_MajorVersion();
            [DllImport("bvtsdk4", CallingConvention=CallingConvention.Cdecl)]
            public static extern int BVTSDK_MinorVersion();
            [DllImport("bvtsdk4", CallingConvention=CallingConvention.Cdecl)]
            public static extern int BVTSDK_BuildNumber();

        }
    }

}
